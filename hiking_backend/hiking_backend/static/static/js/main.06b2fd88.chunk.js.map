{"version":3,"sources":["components/NewForm.tsx","components/WeatherDisplay.tsx","components/UserEnteredData.tsx","components/ViewHighlightButton.tsx","components/EditForm.tsx","components/MyHikeHighlight.tsx","components/DiaryEntriesMain.tsx","components/IndivHikeInScroll.tsx","components/MyHikesScroll.tsx","components/NewEntryButton.tsx","components/ScrollTop.tsx","components/LocationSearch.tsx","components/MapContainer.tsx","components/MapAPIDisplay.tsx","components/newEntryFromRecButton.tsx","components/RecommendationHighlight.tsx","components/IndivRecInScroll.tsx","components/RecommendationScroll.tsx","components/ScrollBottom.tsx","components/RecommendationsMain.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["baseURL","WeatherDisplay","lat","lng","useState","currentWeather","setCurrentWeather","useEffect","fetch","process","then","res","json","main","className","id","src","weather","icon","alt","Math","round","temp","description","temp_max","temp_min","UserEnteredData","hike","hike_name","hike_address","hike_date","hike_description","ViewHighlightButton","highlightElement","document","getElementById","newFormElement","editFormElement","style","backgroundColor","onClick","display","NewForm","getEntries","setNewHikeName","setNewHikeAddress","newHikeName","newHikeAddress","hikeName","setHikeName","hikeAddress","setHikeAddress","hikeDate","setHikeDate","hikeDescription","setHikeDescription","resetState","a","onSubmit","e","preventDefault","hikeToAdd","method","body","JSON","stringify","headers","addHike","type","name","placeholder","value","onChange","target","background","color","EditForm","MyHikeHighlight","displayedLocation","latLng","setLatLng","getLatLng","url","encodeURIComponent","data","error","console","log","parsedData","newPosition","Number","width","padding","IndivHikeInScroll","setDisplayedHike","MyHikesScroll","diaryEntries","map","entry","index","NewEntryButton","diaryEntriesElement","alignSelf","scrollIntoView","behavior","ScrollTop","recommendationsElement","margin","barcelona","DiaryEntriesMain","setDiaryEntries","displayedHike","MapContainer","address","infoWindow","setInfoWindow","googleMapsApiKey","mapContainerStyle","height","zoom","center","position","onCloseClick","MapAPIDisplay","location","hike_lat","hike_lng","NewEntryFromRecButton","RecommendationHighlight","IndivRecInScroll","setDisplayedLocation","RecommendationScroll","locations","nearbyLocation","length","LocationSearch","setLocations","setNearbyLocation","locationString","setLocationString","setPosition","getNearbyLocations","buildLocationObjects","getPosition","results","locationsArray","locationObjects","photos","place_id","geometry","hike_img","photo_reference","getRecommendations","ScrollBottom","RecommendationsMain","undefined","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.06b2fd88.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport { ViewHighlightButton } from \"./ViewHighlightButton\"\n\n// let baseURL = \"http://localhost:8000/api\"\n\nlet baseURL\n\nif (process.env.NODE_ENV === 'development') {\n    baseURL = \"http://localhost:8000/api\"\n} else {\n    // \"https://hike-diary-backend.herokuapp.com/\" in this case is the *API* url\n    baseURL = 'https://hike-diary-backend.herokuapp.com/api'\n}\n\nexport const NewForm = ({getEntries, setNewHikeName, setNewHikeAddress, newHikeName, newHikeAddress}) => {\n    // VARIABLES //\n    \n    // STATE //\n    const [hikeName, setHikeName] = useState(newHikeName)\n    const [hikeAddress, setHikeAddress] = useState(newHikeAddress)\n    const [hikeDate, setHikeDate] = useState(\"\")\n    const [hikeDescription, setHikeDescription] = useState(\"\")\n\n    // API REQ //\n    const addHike = (e) => {\n        e.preventDefault()\n        let hikeToAdd = {\n            hike_name: hikeName,\n            hike_address: hikeAddress,\n            hike_date: hikeDate,\n            hike_description: hikeDescription\n        }\n        fetch(`${baseURL}/diary_entry/`, {\n            method: \"POST\",\n            body: JSON.stringify(hikeToAdd),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(res => res.json())\n            .then(() => {\n                getEntries()\n            })\n            .then(() => {\n                resetState()\n            })\n    }\n\n    // FUNCTIONS //\n    const resetState = async () => {\n        await setNewHikeAddress(\"\")\n        await setNewHikeName(\"\")\n        setHikeName(hikeName)\n        setHikeAddress(hikeAddress)\n        setHikeDate(\"\")\n        setHikeDescription(\"\")\n        \n    }\n    return (\n        <div className = \"new-entry\">\n            <div className = \"edit-title-and-button\">\n                <h4 className = \"new-form-title\">New Hike</h4>\n                <ViewHighlightButton />                \n            </div>\n            <form className = \"new-entry-form\" onSubmit = {(e) => addHike(e)}>\n                <input className = \"new-form-input\" type = \"text\" name = \"hike_name\" id = \"hike_name\" placeholder = \"Hike Name\" value = {hikeName} onChange = {e => setHikeName(e.target.value)} />\n                <input className = \"new-form-input\" type = \"text\" name = \"hike_address\" id = \"hike_address\" placeholder = \"Address\" value = {hikeAddress} onChange = {e => setHikeAddress(e.target.value)} /> \n                 <input className = \"new-form-input\" name = \"hike_date\" id = \"hike_date\" type = \"date\" value = {hikeDate} onChange = {e => setHikeDate(e.target.value)} />\n                <input className = \"new-form-input\" type = \"text\" name = \"hike_description\" id = \"hike_description\" placeholder = \"Description\" value = {hikeDescription} onChange = {e => setHikeDescription(e.target.value)} /> \n                <input className = \"new-form-input\" type = \"submit\" value = \"Add Hike\" style = {{background: \"white\", color: \"black\"}} /> \n            </form>\n        </div>\n    )\n}","import { FunctionComponent, useEffect, useState } from \"react\"\nimport {FaThermometerThreeQuarters} from 'react-icons/fa'\n\nconst WEATHER_KEY = process.env.REACT_APP_OPEN_WEATHER_MAP_KEY!\n// const RAPID_API_KEY = process.env.REACT_APP_RAPID_API_KEY!\n\ninterface WeatherDisplayProps {\n    lat: number,\n    lng: number\n}\n\ntype CurrentWeather = Record<string, any> // placeholder until final interface is determined\n\nexport const WeatherDisplay: FunctionComponent<WeatherDisplayProps> = ({lat, lng}) => {\n    // STATE //\n    const [currentWeather, setCurrentWeather] = useState<CurrentWeather>({})\n\n    // API REQ //\n    const getWeather = () => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lon=${lng}&lat=${lat}&units=imperial&appid=${WEATHER_KEY}`\n        )\n            .then(res => {\n                // console.log(res)\n                return res.json()\n            })\n            .then(res => {\n                // console.log(res)\n                setCurrentWeather(res)\n            })\n    }\n\n    // HOOKS //\n    useEffect(() => {\n        getWeather()\n    }, [lat, lng])\n\n    return (\n        currentWeather.main ? <div className = \"weather-display\">\n            <h5 className = \"weather-title\">Current Weather</h5>\n            <div id=\"icon\"><img id=\"wicon\" src={\"http://openweathermap.org/img/w/\" + currentWeather.weather[0].icon + \".png\"} alt=\"Weather icon\" /></div>\n            <p className = \"weather-text\"><FaThermometerThreeQuarters /> {Math.round(currentWeather.main.temp)}: {currentWeather.weather[0].description}</p>\n            <p className = \"weather-text\">High: {Math.round(currentWeather.main.temp_max)} Low: {Math.round(currentWeather.main.temp_min)}</p>\n        </div>\n        : <div>\n            Weather Display\n        </div>\n    )\n}\n\n// https://forum.freecodecamp.org/t/calling-openweathermap-api-is-blocked-due-to-cors-header-access-control-allow-origin-missing/191868 used this resource to structure cors proxy for eatherbit api request\n\n// https://stackoverflow.com/questions/44177417/how-to-display-openweathermap-weather-icon used this and https://openweathermap.org/weather-conditions to use icon from weatehr api","export const UserEnteredData = ({hike}) => {\n    return (\n        <div className = \"user-entered=data\">\n            <h6 className = \"user-data-text\" id = \"entry-address\">{hike.hike_name} Address: {hike.hike_address}</h6>\n            <h6 className = \"user-data-text\" id = \"entry-date\">Hike Date: {hike.hike_date}</h6>\n            <h6 className = \"user-data-text\" >{hike.hike_description}</h6>\n        </div>\n    )\n}","export const ViewHighlightButton = () => {\n    // VARIABLES //\n    const highlightElement = document.getElementById(\"highlight-element\")!\n    const newFormElement = document.getElementById(\"new-form-element\")!\n    const editFormElement = document.getElementById(\"edit-form-element\")!\n    \n    // FUNCTIONS //\n    const changeDisplays = () => {\n        highlightElement.style.display = \"inline-flex\"\n        newFormElement.style.display = \"none\"\n        editFormElement.style.display = \"none\"\n    }\n\n    return (\n        <button style = {{backgroundColor: \"white\"}} className = \"highlight-button\" onClick = {() => changeDisplays()} >Return to Highlight</button>\n    )\n}","import { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport { ViewHighlightButton } from \"./ViewHighlightButton\"\n\n// let baseURL = \"http://localhost:8000/api\"\n\nlet baseURL\n\nif (process.env.NODE_ENV === 'development') {\n    baseURL = \"http://localhost:8000/api\"\n} else {\n    // \"https://hike-diary-backend.herokuapp.com/\" in this case is the *API* url\n    baseURL = 'https://hike-diary-backend.herokuapp.com/api'\n}\nexport const EditForm = ({hike}) => {\n    // STATE //\n    const [hikeName, setHikeName] = useState(hike.hike_name)\n    const [hikeAddress, setHikeAddress] = useState(hike.hike_address)\n    const [hikeDate, setHikeDate] = useState(hike.hike_date)\n    const [hikeDescription, setHikeDescription] = useState(hike.hike_description)\n    \n    // HOOKS //\n    useEffect(() => {\n        setHikeName(hike.hike_name)\n        setHikeAddress(hike.hike_address)\n        setHikeDate(hike.hike_date)\n        setHikeDescription(hike.hike_description)\n    }, [hike])\n\n    // API REQ //\n    // const updateHike = (e) => {\n    //     e.preventDefault()\n    //     fetch(`${baseURL}/diary_entry/`, {\n            \n    //     })\n    // }\n\n    return (\n        <div>\n            <h4>Edit {hike.hike_name} Hike</h4>\n            <form className = \"edit-entry-form\">\n                <input className = \"edit-form-input\" type = \"text\" name = \"hike_name\" id = \"hike_name\" placeholder = \"Hike Name\" value = {hikeName} onChange = {e => setHikeName(e.target.value)} />\n                <input className = \"edit-form-input\" type = \"text\" name = \"hike_address\" id = \"hike_address\" placeholder = \"Address\" value = {hikeAddress} onChange = {e => setHikeAddress(e.target.value)} /> \n                 <input className = \"edit-form-input\" name = \"hike_date\" id = \"hike_date\" type = \"date\" value = {hikeDate} onChange = {e => setHikeDate(e.target.value)} />\n                <input className = \"edit-form-input\" type = \"text\" name = \"hike_description\" id = \"hike_description\" placeholder = \"Description\" value = {hikeDescription} onChange = {e => setHikeDescription(e.target.value)} /> \n                <input className = \"edit-form-input\" type = \"submit\" value = \"Update Hike\" style = {{background: \"white\", color: \"black\"}} /> \n            </form>\n            <ViewHighlightButton />\n        </div>\n    )\n}","import { MapAPIDisplay } from \"./MapAPIDisplay\"\nimport { WeatherDisplay } from \"./WeatherDisplay\"\n// import { ScrollToButton } from \"./ScrollToButton\"\nimport {UserEnteredData} from \"./UserEnteredData\"\nimport {NewForm} from \"./NewForm\"\nimport {EditForm} from \"./EditForm\"\nimport { HikeLocation } from \"./types\"\nimport { FunctionComponent, useState } from \"react\"\nimport { useEffect } from \"react\"\n\ninterface MyHikeHighlightProps {\n    displayedLocation: Record<string, any>;\n    getEntries: (f) => void;\n    newHikeName: string;\n    newHikeAddress: string;\n    setNewHikeName: (f: string) => void;\n    setNewHikeAddress: (f: string) => void;\n}\ninterface PositionObject {\n    lat: number,\n    lng: number\n}\n\n// let baseURL = \"http://localhost:8000/api\"\n\nlet baseURL\n\nif (process.env.NODE_ENV === 'development') {\n    baseURL = \"http://localhost:8000/api\"\n} else {\n    // \"https://hike-diary-backend.herokuapp.com/\" in this case is the *API* url\n    baseURL = 'https://hike-diary-backend.herokuapp.com/'\n}\n\nexport const MyHikeHighlight: FunctionComponent<MyHikeHighlightProps> = ({displayedLocation, getEntries, newHikeName, newHikeAddress, setNewHikeName, setNewHikeAddress}) => {\n\n    // STATE //\n    const [latLng, setLatLng] = useState<PositionObject | null>(null)\n\n    // VARIABLES //\n    const highlightElement = document.getElementById(\"highlight-element\")!\n    const editFormElement = document.getElementById(\"edit-form-element\")!\n\n    // HOOKS //\n    useEffect(() => {\n        getLatLng()\n    }, [displayedLocation])\n\n    // API REQ //\n    const getLatLng = () => {\n        const url = `${baseURL}/location_search?location_string=${encodeURIComponent(displayedLocation.hike_address)}`\n        fetch(url)\n        .then(data => {return data.json()}, error => console.log(error))\n        .then(parsedData => {\n            const newPosition: PositionObject = {\n                lat: Number(parsedData[\"candidates\"][0][\"geometry\"][\"location\"][\"lat\"]),\n                lng: Number(parsedData[\"candidates\"][0][\"geometry\"][\"location\"][\"lng\"])\n            }\n            setLatLng(newPosition)\n        }, error => console.log(error))\n    }\n\n    // FUNCTIONS //\n    const changeDisplays = () => {\n        highlightElement.style.display = \"none\"\n        editFormElement.style.display = \"inline-flex\"\n    }\n\n    return (\n        <div className = \"entry-highlight\">\n            {\n                    latLng ? <div className = \"display-highlight\" id = \"highlight-element\">\n                        <div className = \"title-and-edit\">\n                            <h4 className = \"hike-highlight-title\">{displayedLocation.hike_name}</h4>\n                            <div className = \"edit-button\">\n                               <button style = {{backgroundColor: \"white\", width: \"30%\", padding: \"1%\"}} onClick = {() => {\n                            changeDisplays()\n                            console.log(displayedLocation)\n                            }}>Edit</button> \n                            </div>\n                            \n                        </div>\n                        <div className = \"data-and-weather\">\n                            <UserEnteredData hike = {displayedLocation} />\n                        {/* <MapAPIDisplay location = {displayedLocation} /> */}\n                            <WeatherDisplay lat = {latLng.lat} lng = {latLng.lng} />\n                        </div>\n                        \n                </div>\n                : <div className = \"display-highlight\" id = \"highlight-element\">Add a hike to view a highlight.</div>\n            }\n            \n            <div className = \"display-new\" id = \"new-form-element\">\n                <NewForm getEntries = {getEntries} newHikeName = {newHikeName} newHikeAddress = {newHikeAddress} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n            </div>\n            <div className = \"display-edit\" id = \"edit-form-element\">\n                <EditForm hike = {displayedLocation} />\n            </div>\n            {/* <ScrollToButton /> */}\n        </div>\n    )\n}","import {MyHikeHighlight} from \"./MyHikeHighlight\"\nimport {MyHikesScroll} from \"./MyHikesScroll\"\nimport { HikeLocation } from \"./types\"\nimport { FunctionComponent, useEffect, useState } from \"react\"\nimport { NewEntryButton } from \"./NewEntryButton\"\nimport { ScrollTop } from \"./ScrollTop\"\n\n// let baseURL = \"http://localhost:8000/api\"\n\nlet baseURL\n\nif (process.env.NODE_ENV === 'development') {\n    baseURL = \"http://localhost:8000/api\"\n} else {\n    // \"https://hike-diary-backend.herokuapp.com/\" in this case is the *API* url\n    baseURL = 'https://hike-diary-backend.herokuapp.com/api'\n}\n\ninterface DiaryEntriesMainProps {\n    newHikeName: string;\n    newHikeAddress: string;\n    setNewHikeName: (f: string) => void;\n    setNewHikeAddress: (f: string) => void;\n}\n\n\nconst barcelona = {\n    hike_name: \"Barcelona\",\n    hike_address: \"Barcelona, Spain\",\n    hike_date: \"2021-06-06\",\n    hike_description: \"hike description\"\n  }  \n\nexport const DiaryEntriesMain: FunctionComponent<DiaryEntriesMainProps> = ({newHikeName, newHikeAddress, setNewHikeName, setNewHikeAddress}) => {\n    // STATE //\n    const [diaryEntries, setDiaryEntries] = useState([])\n    const [displayedHike, setDisplayedHike] = useState(barcelona)\n\n    // HOOKS //\n    useEffect(() => {\n        getEntries()\n    }, [])\n\n    // API REQ //\n    const getEntries = () => {\n        fetch(`${baseURL}/diary_entry/`)\n            .then(data => {return data.json()}, error => console.log(error))\n            .then((diaryEntries) => {\n                setDiaryEntries(diaryEntries)\n                setDisplayedHike(diaryEntries[0])\n            })\n    }\n\n    return (\n        <div className = \"entries-main\" id = \"diary-entries-main-elem\">\n            <h1 className = \"my-hikes-title\">My Hikes</h1>\n            <NewEntryButton  />\n            <div className = \"entries-panels\">\n                <MyHikeHighlight displayedLocation = {displayedHike} getEntries = {getEntries} newHikeName = {newHikeName} newHikeAddress = {newHikeAddress} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n                <MyHikesScroll diaryEntries = {diaryEntries} setDisplayedHike = {setDisplayedHike} />\n            </div>\n            <ScrollTop />\n        </div>\n    )\n}","export const IndivHikeInScroll = ({hike, setDisplayedHike}) => {\n    // VARIABLES //\n    const highlightElement = document.getElementById(\"highlight-element\")!\n    const newFormElement = document.getElementById(\"new-form-element\")!\n    const editFormElement = document.getElementById(\"edit-form-element\")!\n    \n    // FUNCTIONS //\n    const changeDisplays = () => {\n        highlightElement.style.display = \"inline-flex\"\n        newFormElement.style.display = \"none\"\n        editFormElement.style.display = \"none\"\n    }\n    return (\n        <div className = \"hikes-in-scroll\" onClick = {() => {\n            setDisplayedHike(hike)\n            changeDisplays()\n        }}>\n            <h6>{hike.hike_name} {hike.hike_date}</h6>\n        </div>\n    )\n}","import {IndivHikeInScroll} from \"./IndivHikeInScroll\"\n\nexport const MyHikesScroll = ({diaryEntries, setDisplayedHike}) => {\n    return (\n        <div className = \"entries-scroll\">\n            <h4>My Hikes</h4>\n            <div>\n                {\n                diaryEntries.map((entry, index) => {\n                    return <IndivHikeInScroll hike = {entry} key = {index} setDisplayedHike = {setDisplayedHike} />\n                })\n            }\n            </div>\n        </div>\n    )\n}","export const NewEntryButton = () => {\n    // VARIABLES //\n    const highlightElement = document.getElementById(\"highlight-element\")!\n    const newFormElement = document.getElementById(\"new-form-element\")!\n    const diaryEntriesElement = document.getElementById(\"diary-entries-main-elem\")!\n    const editFormElement = document.getElementById(\"edit-form-element\")!\n    \n    // FUNCTIONS //\n    const changeDisplays = () => {\n        highlightElement.style.display = \"none\"\n        newFormElement.style.display = \"inline-flex\"\n        editFormElement.style.display = \"none\"\n    }\n\n    const scrollToHikes = () => {\n        diaryEntriesElement.scrollIntoView({\n            behavior: 'smooth'\n        })\n    }\n\n    return (\n        <div className = \"newButton\">\n            <button style = {{backgroundColor: \"white\", width: \"30%\", alignSelf: \"center\"}} className = \"new-button\" id = \"new-button-entry-panel\" onClick = {() => {\n            changeDisplays()\n            scrollToHikes()\n        }} >New Hike</button>\n        </div>\n        \n    )\n}","export const ScrollTop = () => {\n    // VARIABLES //\n    const recommendationsElement = document.getElementById(\"recommendations-main-elem\")!\n\n    // FUNCTIONS //\n    const scrollToRecs = () => {\n        recommendationsElement.scrollIntoView({\n            behavior: 'smooth'\n    })\n}\n\nreturn (\n    <button style = {{backgroundColor: \"white\", width: \"30%\", margin: \"auto\"}} onClick = {() => scrollToRecs()} >Scroll to Recommendations</button>\n)\n}","import { useState } from \"react\"\nimport { HikeLocation } from \"./types\"\nimport { FunctionComponent } from \"react\"\nimport { useEffect } from \"react\"\n\n// let baseURL = \"http://localhost:8000/api\"\n\nlet baseURL\n\nif (process.env.NODE_ENV === 'development') {\n    baseURL = \"http://localhost:8000/api\"\n} else {\n    // \"https://hike-diary-backend.herokuapp.com/\" in this case is the *API* url\n    baseURL = 'https://hike-diary-backend.herokuapp.com/api'\n}\n\ninterface LocationSearchProps {\n    locations: HikeLocation[];\n    setLocations: (f: HikeLocation[]) => void;\n    setNearbyLocation: (f: string) => void;\n}\n\ninterface PositionObject {\n    lat: number,\n    lng: number\n}\n\nexport const LocationSearch: FunctionComponent<LocationSearchProps> = ({locations, setLocations, setNearbyLocation}) => {\n    // STATE //\n    const [locationString, setLocationString] = useState(\"\") // string entered by user, used to make places api textquery req to get lat/lng of location of interest\n    const [position, setPosition] = useState<PositionObject>({lat: 41.3851, lng: 2.1734}) // object of lat/lng obtained from textquery to make a places api nearbysearch req to obtain multiple locations\n\n    // HOOKS //\n    useEffect(() => {\n        getNearbyLocations()\n            .then(buildLocationObjects)\n    }, [position])\n\n    // API REQ //\n    const getPosition = () => {\n        setNearbyLocation(locationString)\n        const url = `${baseURL}/location_search?location_string=${encodeURIComponent(locationString)}`\n        fetch(url)\n            .then(data => {return data.json()}, error => console.log(error))\n            .then(parsedData => {\n                const newPosition: PositionObject = {\n                    lat: Number(parsedData[\"candidates\"][0][\"geometry\"][\"location\"][\"lat\"]),\n                    lng: Number(parsedData[\"candidates\"][0][\"geometry\"][\"location\"][\"lng\"])\n                }\n                setPosition(newPosition)\n                setLocationString(\"\")\n            }, error => console.log(error))\n    }\n\n    const getNearbyLocations = () => {\n        const url = `${baseURL}/get_nearby_locations?lat=${encodeURIComponent(position.lat)}&lng=${encodeURIComponent(position.lng)}`\n        return fetch(url)\n            .then(data => {return data.json()}, error => console.log(error))\n            .then(parsedData => {\n            const matchingLocations = parsedData.results\n            return matchingLocations\n        }, error => console.log(error))   \n    }\n\n    const buildLocationObjects = (locationsArray) => {\n        let locationObjects = locationsArray.map(location => {\n            if (location.photos) {\n                return {\n                hike_name: location.name,\n                hike_address: location.place_id,\n                hike_lat: location.geometry.location.lat,\n                hike_lng: location.geometry.location.lng,\n                hike_img: location.photos[0].photo_reference,\n                }\n            } else {\n                return {\n                    hike_name: location.name,\n                    hike_address: location.place_id,\n                    hike_lat: location.geometry.location.lat,\n                    hike_lng: location.geometry.location.lng,\n                    hike_img: null,\n                    }\n            }\n            \n        })\n        setLocations(locationObjects)\n    }\n\n    const getRecommendations = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        getPosition()\n\n    }\n\n    return (\n        <form className = \"location-search\" onSubmit = {getRecommendations}>\n            <input className = \"location-search-input\" type = \"text\" id = \"location_string\" name = \"location_string\" onChange = {e => setLocationString(e.target.value)} placeholder = \"Where are you?\" value = {locationString} />\n            <input style = {{backgroundColor: \"white\"}} className = \"search-btn\" type = \"submit\" value = \"Search\"/>\n        </form>\n    )\n}\n","import { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api'\nimport { useState } from 'react'\nimport { LocationSearch } from './LocationSearch'\n\ninterface SetInfoWindow {\n    name: string,\n    address: string\n}\n\nconst KEY = process.env.REACT_APP_GOOGLE_MAPS_API_KEY!\n\nexport const MapContainer = ({lat, lng, name, address}) => {\n    // STATE //\n    const [infoWindow, setInfoWindow] = useState<SetInfoWindow | null>(null)\n\n    // MAP VARS //\n    const mapStyle = {\n        height: \"25vh\",\n        width: \"35vh\"\n    }\n\n\n    return (\n        <div className = \"map-container\">\n            <LoadScript googleMapsApiKey = {KEY}>\n                <GoogleMap\n                    \n                    mapContainerStyle = {mapStyle}\n                    zoom = {13}\n                    center = {{lat: Number(lat), lng: Number(lng)}}\n                >\n                    <Marker \n                        position = {{lat: Number(lat), lng: Number(lng)}}\n                        onClick = {() => setInfoWindow({name, address})}\n                    />\n                    {\n                        infoWindow &&\n                        (\n                            <InfoWindow\n                                position = {{lat: Number(lat), lng: Number(lng)}}\n                                // clickable={true}\n                                onCloseClick={() => setInfoWindow(null)}\n                            >\n                                <p>{infoWindow.name} – {infoWindow.address}</p>\n                            </InfoWindow>\n                        )\n                    }\n                </GoogleMap>\n            </LoadScript>\n        </div>\n    )\n}\n\n// used this article to structure maps and maps import https://medium.com/@allynak/how-to-use-google-map-api-in-react-app-edb59f64ac9d","import {MapContainer} from \"./MapContainer\"\n// import {ImageSquare} from \"./ImageSquare\"\nimport { HikeLocation } from \"./types\"\nimport { FunctionComponent } from \"react\"\n\ninterface MapAPIDisplayProps {\n    location: HikeLocation;\n}\n\nconst defaultImg: string = \"Aap_uEBaRri4OHdlHztGYgY38df5LG8l9uPg7Q2cnhVoy5ogcRar6zw0k831ZctpnSHh6stREpHRvJ-Bh0mhUiqKNomcy4rIYY9RcTHx6Yu0dfWiwPTghLPSq-7Wfuy5ssBPA_IAC4FFtoM-jOGEwBLPhwcVWKkLcLF8HlBPt_ue_bTWW3aX\" \n\nexport const MapAPIDisplay: FunctionComponent<MapAPIDisplayProps> = ({location}) => {\n    return (\n        <div className = \"map-display\">\n            {\n                location ? (\n                <> \n                    <MapContainer lat = {location.hike_lat} lng = {location.hike_lng} name = {location.hike_name} address = {location.hike_address} />\n                    {/* <ImageSquare img = {location.hike_img} />  */}\n                </>) : (\n                <>\n                    <MapContainer lat = {41.3851} lng = {2.1734} name = \"Barcelona, Spain\" address = \"Barcelona,\" /> \n                    {/* <ImageSquare img = {defaultImg} /> */}\n                </>)\n            }\n            \n        </div>\n    )\n}","export const NewEntryFromRecButton = ({hikeName, hikeAddress, setNewHikeAddress, setNewHikeName}) => {\n    // VARIABLES //\n    const highlightElement = document.getElementById(\"highlight-element\")!\n    const newFormElement = document.getElementById(\"new-form-element\")!\n    const diaryEntriesElement = document.getElementById(\"diary-entries-main-elem\")!\n    const editFormElement = document.getElementById(\"edit-form-element\")!\n    \n    // FUNCTIONS //\n    const changeDisplays = () => {\n        highlightElement.style.display = \"none\"\n        newFormElement.style.display = \"inline-flex\"\n        editFormElement.style.display = \"none\"\n    }\n\n    const scrollToHikes = () => {\n        diaryEntriesElement.scrollIntoView({\n            behavior: 'smooth'\n        })\n    }\n\n    return (\n        <button style = {{backgroundColor: \"white\"}} className = \"new-button\" onClick = {async() => {\n            await setNewHikeAddress(hikeAddress)\n            await setNewHikeName(hikeName)\n            changeDisplays()\n            scrollToHikes()\n        }} >New Hike</button>\n    )\n}","import {MapAPIDisplay} from \"./MapAPIDisplay\"\nimport {WeatherDisplay} from \"./WeatherDisplay\"\nimport { HikeLocation } from \"./types\"\nimport { FunctionComponent, useEffect, useState } from \"react\"\nimport { NewEntryFromRecButton } from \"./newEntryFromRecButton\"\n\ninterface RecommendationHighlightProps {\n    displayedLocation: HikeLocation;\n    setNewHikeName: (f: string) => void;\n    setNewHikeAddress: (f: string) => void;\n}\n\nexport const RecommendationHighlight: FunctionComponent<RecommendationHighlightProps> = ({displayedLocation, setNewHikeName, setNewHikeAddress}) => {\n\n    return (\n        <div className = \"recommendation-highlight\">\n            <div className = \"title-and-button\">\n                {\n                    displayedLocation ? <h5 className = \"highlight-title\">{displayedLocation.hike_name}</h5>\n                    : <h5 className = \"highlight-title\">Search a Location to See a Recommendation.</h5>\n                }\n                \n                <NewEntryFromRecButton hikeName = {displayedLocation.hike_name} hikeAddress = {displayedLocation.hike_address} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress}  />\n            </div>\n            <div className = \"map-and-weather\">\n                <MapAPIDisplay location = {displayedLocation}/>\n                <WeatherDisplay lat = {displayedLocation.hike_lat} lng = {displayedLocation.hike_lng} />\n            </div>\n            \n        </div>\n    )\n}","import { FunctionComponent } from \"react\"\nimport { NewEntryButton } from \"./NewEntryButton\"\nimport { NewEntryFromRecButton } from \"./newEntryFromRecButton\"\nimport { HikeLocation } from \"./types\"\n\ninterface IndivRecInScrollProps {\n    location: HikeLocation;\n    setDisplayedLocation: (f: HikeLocation) => void;\n    setNewHikeName: (f: string) => void;\n    setNewHikeAddress: (f: string) => void;\n}\n\nexport const IndivRecInScroll: FunctionComponent<IndivRecInScrollProps> = ({location, setDisplayedLocation, setNewHikeName, setNewHikeAddress}) => {\n    return (\n        <div className = \"rec-and-new\" onClick = {() => setDisplayedLocation(location)}>\n            <h6 className = \"indiv-rec-title\">{location.hike_name}</h6>\n            <NewEntryFromRecButton hikeName = {location.hike_name} hikeAddress = {location.hike_address} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n        </div>\n    )\n}","import { FunctionComponent } from \"react\"\nimport {IndivRecInScroll} from \"./IndivRecInScroll\"\n// import {ScrollToButton} from \"./ScrollToButton\"\nimport { HikeLocation } from \"./types\"\n\ninterface RecommendationsScrollProps {\n    locations: HikeLocation[];\n    setDisplayedLocation: (f: HikeLocation) => void;\n    nearbyLocation: string;\n    setNewHikeName: (f: string) => void;\n    setNewHikeAddress: (f: string) => void;\n}\n\nexport const RecommendationScroll: FunctionComponent<RecommendationsScrollProps> = ({locations, setDisplayedLocation, nearbyLocation, setNewHikeName, setNewHikeAddress}) => {\n    return (\n        <div className = \"recommendations-scroll\">\n            <h5 className = \"scroll-title\">Hikes near {nearbyLocation}</h5>\n            <div className = \"titles-in-scroll\">\n                {\n                    locations.length > 0 ? locations.map((location, index) => {\n                        return <IndivRecInScroll location = {location} key = {index} setDisplayedLocation = {setDisplayedLocation} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n                    })\n                    : <h6>Search a Location to See Recommendations.</h6>\n                }\n            </div>\n{/*             \n            <ScrollToButton /> */}\n        </div>\n    )\n}","export const ScrollBottom = () => {\n        // VARIABLES //\n        const diaryEntriesElement = document.getElementById(\"diary-entries-main-elem\")!\n\n        // FUNCTIONS //\n        const scrollToHikes = () => {\n            diaryEntriesElement.scrollIntoView({\n                behavior: 'smooth'\n        })\n    }\n\n    return (\n        <button style = {{backgroundColor: \"white\"}} onClick = {() => scrollToHikes()} >Scroll to My Hikes</button>\n    )\n    }","import { FunctionComponent, useEffect, useState } from \"react\"\nimport {RecommendationHighlight} from \"./RecommendationHighlight\"\nimport {RecommendationScroll} from \"./RecommendationScroll\"\nimport { HikeLocation } from \"./types\"\nimport {LocationSearch} from \"./LocationSearch\"\nimport { ScrollBottom } from \"./ScrollBottom\"\n\ninterface RecommendationsMainProps {\n    locations: HikeLocation[];\n    setLocations: (f: HikeLocation[]) => void;\n    displayedLocation: HikeLocation;\n    setDisplayedLocation: (f: HikeLocation) => void;\n    setNewHikeName: (f: string) => void;\n    setNewHikeAddress: (f: string) => void;\n}\n\n// const barcelona: HikeLocation = {\n//     hike_name: \"Barcelona\",\n//     hike_address: \"Barcelona, Spain\",\n//     hike_lat: 41.3851,\n//     hike_lng: 2.1734,\n//     hike_img: undefined,\n// }\n\nexport const RecommendationsMain: FunctionComponent<RecommendationsMainProps> = ({locations, setLocations, displayedLocation, setDisplayedLocation, setNewHikeName, setNewHikeAddress}) => {\n    // STATE //\n    const [nearbyLocation, setNearbyLocation] = useState(\"Barcelona, Spain\")\n\n    // HOOKS //\n    useEffect(() => {\n        locations.length > 0 && setDisplayedLocation(locations[0])\n    }, [locations])\n\n    return (\n        <div className = \"recommendations-main\" id = \"recommendations-main-elem\">\n            <h3 className = \"rec-main-title\" >Where should I hike?</h3>\n            {/* <p className = \"cute-quote\">“And into the forest I go, to lose my mind and find my soul.” — John Muir</p> */}\n            <LocationSearch locations = {locations} setLocations = {setLocations} setNearbyLocation = {setNearbyLocation} />\n            <div className = \"recommendations-panels\">\n                <RecommendationHighlight displayedLocation = {displayedLocation} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n                <RecommendationScroll locations = {locations} setDisplayedLocation = {setDisplayedLocation} nearbyLocation = {nearbyLocation} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n            </div>\n            <ScrollBottom />\n        </div>\n    )\n}","import { /*useEffect, */useState } from \"react\"\nimport {DiaryEntriesMain} from \"./components/DiaryEntriesMain\"\nimport {RecommendationsMain} from \"./components/RecommendationsMain\"\nimport { HikeLocation } from \"./components/types\"\n\nconst barcelona: HikeLocation = {\n  hike_name: \"Barcelona\",\n  hike_address: \"Barcelona, Spain\",\n  hike_lat: 41.3851,\n  hike_lng: 2.1734,\n  hike_img: undefined,\n}\n\nexport const App = () => {\n  // STATE //\n  const [locations, setLocations] = useState<HikeLocation[]>([])\n  const [displayedLocation, setDisplayedLocation] = useState(barcelona)\n  const [newHikeName, setNewHikeName] = useState(\"\")\n  const [newHikeAddress, setNewHikeAddress] = useState(\"\")\n\n  return (\n    <>\n      <RecommendationsMain  displayedLocation = {displayedLocation} setDisplayedLocation = {setDisplayedLocation} locations = {locations} setLocations = {setLocations} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n      <DiaryEntriesMain newHikeName = {newHikeName} newHikeAddress = {newHikeAddress} setNewHikeName = {setNewHikeName} setNewHikeAddress = {setNewHikeAddress} />\n    </>\n  )\n}\n","import type {ReportHandler} from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}